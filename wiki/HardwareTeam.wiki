#summary Hardware Team subwiki

A few initial ideas to get the ball rolling -- Harry

*Main working areas:*
||<wiki:toc max_depth="1" />||

----

=i have decreed that it is arduino, no one contributed early enough!=

~~= MCU platform =~~


~~For choice of microcontroller platform we have PIC, Arduino (atmega), ARM or parallax stamp (probably others). ~~
~~Things to consider when deciding which to use - ~~
 * ~~Do the chips suit the application in terms of pin count, hardware peripherals (i2c, PWM, counters, timers, A/D...), processing power, package?~~
 * ~~What are the available resources? - Online communities, programming equipment(we might be able to use university programmers), libraries, documentation, etc~~
 * ~~What experience does the group have with this platform?~~
 * ~~What costs are associated with it in terms of money, time, space on the bot, etc.~~

~~Also we need to think about our approach towards the low level processing that is required. Are going to go for a modular approach? - separate MCUs for the servo controller, stepper/DC motors and sensors might make sense since we can easily fit plenty of slaves on the i2c bus.~~

= Sensors =

The bot is going to need to measure distance so rangefinders will be useful. The most common output method for these sensors is an analogue voltage, but some use PWM or even i2c. If we use analogue voltages, we will have to consider low-pass filters to clean the signal if they aren't already implemented in the sensors.
An electronic compass could be useful for orientation purposes (maybe even gyros and accelerometers...)
Our wiki page on sensors is [http://code.google.com/p/mew-dev/wiki/Sensors here].

= Actuators = 

Until the mechanical team have come to a decision, we should think about which actuators we would like them to use. For driving the wheels of the bot, DC motors, stepper motors, modified servos and AC motors are possibilities. What electronic requirements would each of these need?
For the grippers and other effectors on the bot, we will be using servos and possibly a linear actuator. 

Interesting article on creating a PIC based DC motor controller with PID control - [http://www.seattlerobotics.org/encoder/200205/pidmc.html here].